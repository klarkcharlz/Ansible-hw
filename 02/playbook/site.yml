- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse client and server distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_all.deb"
            dest: "/tmp/{{ item }}-{{ clickhouse_version }}.deb"
          with_items:
            - clickhouse-client
            - clickhouse-server
        - name: Get clickhouse common static distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "/tmp/clickhouse-common-static-{{ clickhouse_version }}.deb"
      rescue:
        - name: Get clickhouse common static distrib (rescue)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "/tmp/clickhouse-common-static-{{ clickhouse_version }}.deb"

    - name: Check if clickhouse packages are downloaded
      ansible.builtin.shell: "ls -l /tmp/clickhouse-common-static-{{ clickhouse_version }}.deb"
      register: clickhouse_common_static_check

    - name: Debug clickhouse common static package
      ansible.builtin.debug:
        msg: "File exists: {{ clickhouse_common_static_check.stdout }}"

    - name: Install clickhouse common static package
      become: true
      ansible.builtin.command:
        cmd: "dpkg -i /tmp/clickhouse-common-static-{{ clickhouse_version }}.deb"
      when: clickhouse_common_static_check.stdout != ""

    - name: Install clickhouse client package
      become: true
      ansible.builtin.command:
        cmd: "dpkg -i /tmp/clickhouse-client-{{ clickhouse_version }}.deb"

    - name: Install clickhouse server package
      become: true
      ansible.builtin.command:
        cmd: "dpkg -i /tmp/clickhouse-server-{{ clickhouse_version }}.deb"
      notify: Start clickhouse service

    - name: Flush handlers
      meta: flush_handlers

    - name: Ensure clickhouse service is running
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: started
        enabled: yes

    - name: Wait for Clickhouse to be available
      become: true
      ansible.builtin.wait_for:
        host: localhost
        port: 9000
        delay: 10
        timeout: 300

    - name: Create database
      become: true
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install and configure Vector
  hosts: clickhouse
  vars_files:
    - group_vars/vector/vars.yml
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Create vector installation directory
      become: true
      ansible.builtin.file:
        path: "{{ vector_install_dir }}"
        state: directory

    - name: Download vector
      become: true
      ansible.builtin.get_url:
        url: "{{ vector_download_url }}"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"

    - name: Extract vector
      become: true
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "{{ vector_install_dir }}"
        remote_src: yes

    - name: List contents of vector installation directory
      become: true
      ansible.builtin.shell: "ls -l {{ vector_install_dir }}"
      register: vector_install_dir_contents
      changed_when: false

    - name: Debug vector installation directory contents
      ansible.builtin.debug:
        var: vector_install_dir_contents.stdout_lines

    - name: Create vector configuration directory
      become: true
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory

    - name: Deploy vector configuration
      become: true
      ansible.builtin.template:
        src: "templates/vector.toml.j2"
        dest: "{{ vector_config_file }}"
      notify: Restart vector service

    - name: Create symlink for vector binary
      become: true
      ansible.builtin.file:
        src: "{{ vector_install_dir }}/vector"
        dest: "/usr/local/bin/vector"
        state: link

    - name: Deploy vector systemd service
      become: true
      ansible.builtin.template:
        src: "templates/vector.service.j2"
        dest: /etc/systemd/system/vector.service
      notify: Restart vector service

    - name: Ensure vector service is running
      become: true
      ansible.builtin.service:
        name: vector
        state: started
        enabled: yes
